version: '3.8'

services:
  # Master Control Program Server
  mcp-server:
    build:
      context: .
      dockerfile: docker/Dockerfile.mcp
    container_name: supermanus-mcp
    ports:
      - "8000:8000"
      - "8001:8001"  # WebSocket port
    environment:
      - REDIS_HOST=redis
      - POSTGRES_HOST=postgres
      - ENABLE_ANTICIPATION=true
      - LOG_LEVEL=INFO
    volumes:
      - ./src:/app
      - ./logs:/logs
    depends_on:
      - redis
      - postgres
    networks:
      - supermanus-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G

  # Main Voice Pipeline
  voice-pipeline:
    build:
      context: .
      dockerfile: docker/Dockerfile.voice
    container_name: supermanus-voice
    environment:
      - MCP_SERVER=http://mcp-server:8000
      - WHISPER_MODEL=base
      - TTS_ENGINE=piper
      - REDIS_HOST=redis
    volumes:
      - ./src:/app
      - ./models:/models
      - /dev/snd:/dev/snd  # Audio device access
    devices:
      - /dev/dri:/dev/dri  # GPU access for ROCm
    group_add:
      - audio
      - video
      - render
    depends_on:
      - mcp-server
      - redis
    networks:
      - supermanus-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G
          devices:
            - driver: amdgpu
              count: 1
              capabilities: [gpu]

  # LLM Service (Llama-3 via vLLM)
  llm-service:
    build:
      context: .
      dockerfile: docker/Dockerfile.llm
    container_name: supermanus-llm
    ports:
      - "8002:8000"
    environment:
      - MODEL_NAME=meta-llama/Llama-3-8b
      - QUANTIZATION=int8
      - MAX_TOKENS=2048
      - GPU_MEMORY_UTILIZATION=0.9
    volumes:
      - ./models:/models
      - ./cache:/cache
    devices:
      - /dev/dri:/dev/dri
    group_add:
      - video
      - render
    networks:
      - supermanus-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 32G
        reservations:
          memory: 16G
          devices:
            - driver: amdgpu
              count: 1
              capabilities: [gpu]

  # Image Generation Module
  image-generator:
    build:
      context: .
      dockerfile: docker/Dockerfile.image
    container_name: supermanus-image
    ports:
      - "8003:8000"
    environment:
      - MCP_SERVER=http://mcp-server:8000
      - MODEL_NAME=stabilityai/stable-diffusion-xl-base-1.0
      - REDIS_HOST=redis
    volumes:
      - ./models:/models
      - ./outputs/images:/outputs
    devices:
      - /dev/dri:/dev/dri
    group_add:
      - video
      - render
    depends_on:
      - mcp-server
    networks:
      - supermanus-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 16G
        reservations:
          memory: 8G
          devices:
            - driver: amdgpu
              count: 1
              capabilities: [gpu]

  # Code Generation Module
  code-generator:
    build:
      context: .
      dockerfile: docker/Dockerfile.code
    container_name: supermanus-code
    ports:
      - "8004:8000"
    environment:
      - MCP_SERVER=http://mcp-server:8000
      - MODEL_NAME=codellama/CodeLlama-7b-Python-hf
      - SANDBOX_ENABLED=true
    volumes:
      - ./models:/models
      - ./outputs/code:/outputs
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - mcp-server
    networks:
      - supermanus-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: supermanus-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - supermanus-network
    restart: unless-stopped

  # PostgreSQL for persistent storage
  postgres:
    image: postgres:16-alpine
    container_name: supermanus-postgres
    environment:
      - POSTGRES_DB=supermanus
      - POSTGRES_USER=superman
      - POSTGRES_PASSWORD=kryptonite123
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - supermanus-network
    restart: unless-stopped

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: supermanus-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - supermanus-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: supermanus-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=superman
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - supermanus-network
    restart: unless-stopped

networks:
  supermanus-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
  prometheus-data:
  grafana-data: